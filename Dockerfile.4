### FAIL cause of the arm build arch
###
###
# Rust as the base image
FROM rust:1.64 as builder

RUN rustup target add x86_64-unknown-linux-musl
RUN apt update && apt install -y musl-tools musl-dev binutils

# Create appuser
ENV USER=appuser
ENV UID=10001

RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    "${USER}"

# WORKDIR /base

#COPY ./ .


# 1. Create a new empty repo
RUN USER=appuser cargo new --bin base
WORKDIR /base

# 2. Copy our manifests
COPY ./Cargo.lock ./Cargo.lock
COPY ./Cargo.toml ./Cargo.toml

# 3. Build only the dependencies to cache
# RUN cargo build --release
RUN RUSTFLAGS=-Clinker=musl-gcc cargo build --release --target=x86_64-unknown-linux-musl

RUN rm src/*.rs

# 4. Now that the dependency is built, copy source code 
COPY ./src ./src

# 5. Build for release.
RUN rm -f target/x86_64-unknown-linux-musl/release/deps/base-*
# RUN rm ./target/release/deps/base-*
# RUN cargo build --target x86_64-unknown-linux-musl --release
RUN RUSTFLAGS=-Clinker=musl-gcc cargo build --release --target=x86_64-unknown-linux-musl


# RUN cargo build --target x86_64-unknown-linux-musl --release

####################################################################################################
## Final image
####################################################################################################
FROM scratch

# Import from builder.
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /etc/group /etc/group

WORKDIR /base

# Copy our build
COPY --from=builder /base/target/x86_64-unknown-linux-musl/release/base /base

# Use an unprivileged user.
USER appuser:appuser

CMD ["/base/base"]
